#!/bin/sh

trap 'e=$?; rm -f /tmp/mkb.$$; exit $e' 0 2

mdec=/usr/mdec	# bootstraps

# Check arguments.
case "$#:$1" in
1:bootable | 1:hdboot | 1:cdfdboot)
	action=$1 dev=$2
	;;
*) echo "Usage: $0 [bootable | hdboot | cdfdboot]" >&2
	exit 1
esac

# Get the device table.
. /etc/fstab

# The real root device may be the RAM disk.
realroot=`printroot -r`

# If it's an initial fstab, pretend root is real root
if [ $root = "/dev/ROOT" ]
then root=$realroot
fi

case $action in
bootable | hdboot)
	# We need the root device.
	if [ $realroot = $root ]
	then 
		rootdir=
	else
		umount $root #2>/dev/null
		mount $root /mnt || exit
		rootdir=/mnt
	fi
esac

case $action in
bootable)
	# Install the boot monitor on the root device and make it bootable.
	cp $mdec/boot $rootdir/boot/boot || exit
	sync
	installboot -d $root $mdec/bootblock /boot/boot || exit
	test $realroot != $root && umount $root
	;;
hdboot)
	# Install a new image on the root device.
	if [ ! -d $rootdir/boot/image ]
	then
		# /boot/image is not yet a directory!  Fix it.
		su root -c \
			"exec mv $rootdir/boot/image /M"
		mkdir -p $rootdir/boot/image
		su root -c \
			"exec mv $rootdir/M $rootdir/boot/image/`uname -r`.`uname -v`"
	fi

	version=`cat version`
	revision=`cat revision 2>/dev/null`
	oldrev=$revision
	target="${version}r${revision}"

	if [ -z "$revision" ]
	then
		target="${version}"
		revision=0
	elif [ -f $rootdir/boot/image/$target ]
	then
		if [ $rootdir/boot/image/$target -newer image ]
		then
			echo "$root:/boot/image/$target is up to date"
			test $realroot != $root && umount $root
			exit 0
		fi
		revision=`expr $revision + 1`
		target="${version}r${revision}"
	fi

	set -- `ls -t $rootdir/boot/image`

	case $# in
	0|1|2|3)
		# Not much there, do not remove a thing.
		;;
	*)
		# Remove the third-newest image in /boot/image, but
		# only if there's an older one (which is kept).
		echo "rm $root:/boot/image/$3"
		rm -f "$rootdir/boot/image$3"
	esac

	# Install the new image.
	echo "install image $root:/boot/image/$target"
	dstImage=$rootdir/boot/image/$target
	(cp image $dstImage && \
		chmod 600 $dstImage && \
		chown root $dstImage) || exit

	# Save the revision number.
	test "$revision" != "$oldrev" && echo $revision >revision

	test $realroot != $root && umount $root
	echo "Done."
	;;

cdfdboot)
	# cdfdboot: Make a boot floppy image to go on a CD for booting from.
	dev=/dev/ram
	umount $dev 2>/dev/null
	if mkfs -B 1024 -b 1440 -i 512 $dev || exit 1
	then :
	else
		echo "mkfs of $dev failed."
		exit 1
	fi

	# Install /dev, /boot
	mount $dev /mnt || exit 1
	mkdir /mnt/dev
	mkdir /mnt/boot
	mkdir /mnt/boot/image
	( cd /mnt/dev && sh /usr/src/commands/scripts/MAKEDEV.sh std )
	cp -p image image_* /mnt/boot/image || exit 1
	cp -p ../boot/boot /mnt/boot/boot || exit
	umount $dev || exit 1
	installboot -d $dev ../boot/bootblock boot/boot || exit 1
	#TODO edparams

	# Copy image
	dd if=$dev of=cdfdimage bs=8192 count=180
esac

sync
exit 0

